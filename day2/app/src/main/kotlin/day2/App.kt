/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package day2

import java.io.File


/*
 * X and A - Rock
 * Z and C - Scissors
 * Y and B - Paper
 *
 * */

fun isElfTheWinner(otherElf: String, elf: String): Int {
	if(elf == "X" && otherElf == "C" ||
	   elf == "Y" && otherElf == "A" ||
	   elf == "Z" && otherElf == "B") {
	   	return 6
	   } else return 0
}

fun determineHand(otherElf: String, outcome: String): String {
	if(outcome == "X") {
		if(otherElf == "C") return "Y"
		if(otherElf == "B") return "X"
		if(otherElf == "A") return "Z"
	}
	if(outcome == "Y") {
		if(otherElf == "C") return "Z"
		if(otherElf == "B") return "Y"
		if(otherElf == "A") return "X"
	}
	if(outcome == "Z") {
		if(otherElf == "C") return "X"
		if(otherElf == "B") return "Z"
		if(otherElf == "A") return "Y"
	}
	return ""
}

fun isTie(otherElf: String, elf: String): Int {
	if(elf == "Y" && otherElf == "B" ||
           elf == "X" && otherElf == "A" ||
           elf == "Z" && otherElf == "C") return 3
	else return 0
}

fun scoreHand(elf: String): Int {
	if(elf == "X") return 1
	if(elf == "Y") return 2
	if(elf == "Z") return 3
	return 0
}


fun inputFromAdvent(fileName: String): List<String> {
	return File(fileName).useLines { it.toList() }
}

fun scoreRound(input: String): Int {
	var words = input.split("\\s".toRegex())
	val elfHand = determineHand(words[0], words[1])
	val roundScore = isElfTheWinner(words[0], elfHand) + isTie(words[0], elfHand) + scoreHand(elfHand)
	return roundScore
}

fun main() {
    val input = inputFromAdvent("input.txt")
    var totalScore = 0
    input.forEach { it -> totalScore = totalScore + scoreRound(it) }
    println(totalScore)
}
