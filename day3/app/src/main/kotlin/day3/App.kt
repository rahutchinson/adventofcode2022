/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package day3

import java.io.File

class RuckSack(fullSack: String) {
	val fullSack = fullSack
	var sack1: String
	var sack2: String
	init {
		sack1 = this.fullSack.substring(0, this.fullSack.length/2)
		sack2 = this.fullSack.substring(this.fullSack.length/2)
	}
	fun findSame(): String {
		sack1.forEach { it -> if(sack2.contains(it.toString(), ignoreCase = false)) return it.toString() }
		return ""
	}
}

fun inputFromAdvent(fileName:String): List<String> {
	return File(fileName).useLines { it.toList() }
}

fun getScoreMap() : HashMap<String, Int> {
	var map : HashMap<String, Int> = HashMap<String, Int>()
	var char = 'A'
	for (i in 27..52) {
		map.put("$char",i)
		++char
	}
	char = 'a'
	for(i in 1..26) {
		map.put("$char",i)
		++char
	}
	return map
}

fun find3SackValue(sacks: List<RuckSack>): String {
	sacks[0].fullSack.forEach { it -> if(sacks[1].fullSack.contains(it.toString()) && sacks[2].fullSack.contains(it.toString())) return it.toString() }
	return ""
}


fun main() {
    var sacks = inputFromAdvent("input.txt")
    val scoreMap: HashMap<String, Int> = getScoreMap()
    var score = 0
    var iterator = sacks.iterator()
    while(iterator.hasNext()) {
    	val sack1 = RuckSack(iterator.next())
	val sack2 = RuckSack(iterator.next())
	val sack3 = RuckSack(iterator.next())
        score = score + scoreMap.get(find3SackValue(listOf(sack1, sack2, sack3)))!!
    }
    println(score)
}
